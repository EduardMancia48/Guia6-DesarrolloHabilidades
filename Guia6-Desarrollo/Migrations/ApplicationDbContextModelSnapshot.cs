// <auto-generated />
using System;
using Guia6_Desarrollo.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Guia6_Desarrollo.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Guia6_Desarrollo.Models.Autor", b =>
                {
                    b.Property<int>("AutorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AutorID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("AutorID");

                    b.ToTable("Autores");

                    b.HasData(
                        new
                        {
                            AutorID = 1,
                            Apellido = "García Márquez",
                            Nombre = "Gabriel"
                        },
                        new
                        {
                            AutorID = 2,
                            Apellido = "Allende",
                            Nombre = "Isabel"
                        },
                        new
                        {
                            AutorID = 3,
                            Apellido = "Rowling",
                            Nombre = "J.K."
                        },
                        new
                        {
                            AutorID = 4,
                            Apellido = "Orwell",
                            Nombre = "George"
                        },
                        new
                        {
                            AutorID = 5,
                            Apellido = "Austen",
                            Nombre = "Jane"
                        });
                });

            modelBuilder.Entity("Guia6_Desarrollo.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoriaID"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CategoriaID");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaID = 1,
                            Nombre = "Ficción"
                        },
                        new
                        {
                            CategoriaID = 2,
                            Nombre = "Ciencia Ficción"
                        },
                        new
                        {
                            CategoriaID = 3,
                            Nombre = "Fantasía"
                        },
                        new
                        {
                            CategoriaID = 4,
                            Nombre = "Histórico"
                        },
                        new
                        {
                            CategoriaID = 5,
                            Nombre = "Romance"
                        });
                });

            modelBuilder.Entity("Guia6_Desarrollo.Models.Libro", b =>
                {
                    b.Property<int>("LibroID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LibroID"));

                    b.Property<int>("AutorID")
                        .HasColumnType("int");

                    b.Property<int>("CategoriaID")
                        .HasColumnType("int");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("LibroID");

                    b.HasIndex("AutorID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Libros");

                    b.HasData(
                        new
                        {
                            LibroID = 1,
                            AutorID = 1,
                            CategoriaID = 1,
                            FechaPublicacion = new DateTime(1967, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Cien Años de Soledad"
                        },
                        new
                        {
                            LibroID = 2,
                            AutorID = 2,
                            CategoriaID = 4,
                            FechaPublicacion = new DateTime(1982, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "La Casa de los Espíritus"
                        },
                        new
                        {
                            LibroID = 3,
                            AutorID = 3,
                            CategoriaID = 3,
                            FechaPublicacion = new DateTime(1997, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Harry Potter y la Piedra Filosofal"
                        },
                        new
                        {
                            LibroID = 4,
                            AutorID = 4,
                            CategoriaID = 2,
                            FechaPublicacion = new DateTime(1949, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "1984"
                        },
                        new
                        {
                            LibroID = 5,
                            AutorID = 5,
                            CategoriaID = 5,
                            FechaPublicacion = new DateTime(1813, 1, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Titulo = "Orgullo y Prejuicio"
                        });
                });

            modelBuilder.Entity("Guia6_Desarrollo.Models.Libro", b =>
                {
                    b.HasOne("Guia6_Desarrollo.Models.Autor", "Autor")
                        .WithMany("Libros")
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Guia6_Desarrollo.Models.Categoria", "Categoria")
                        .WithMany("Libros")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("Guia6_Desarrollo.Models.Autor", b =>
                {
                    b.Navigation("Libros");
                });

            modelBuilder.Entity("Guia6_Desarrollo.Models.Categoria", b =>
                {
                    b.Navigation("Libros");
                });
#pragma warning restore 612, 618
        }
    }
}
